apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry-internal
---
apiVersion: v1
data:
  api-token: OUJQLTU2QUpNRjU4RzJ1N1YtdG5Na21MbDVRdmNJSEFVcVU2X1h2Vw==
kind: Secret
metadata:
  name: letsencrypt-cloudflare-api-token-secret
  namespace: docker-registry-internal
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: registry-service
  namespace: docker-registry-internal
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: registry
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-pv-claim
  namespace: docker-registry-internal
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 128Gi
  storageClassName: local-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: registry
  name: registry-deployment
  namespace: docker-registry-internal
spec:
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - image: docker.io/registry
        name: registry
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 250m
            memory: 250Mi
        volumeMounts:
        - mountPath: /var/lib/registry
          name: registry-pv-storage
      volumes:
      - name: registry-pv-storage
        persistentVolumeClaim:
          claimName: registry-pv-claim
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: registry-cert
  namespace: docker-registry-internal
spec:
  dnsNames:
  - registry.internal.visoft.solutions
  issuerRef:
    kind: Issuer
    name: letsencrypt-dns01
  secretName: registry-tls
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-dns01
  namespace: docker-registry-internal
spec:
  acme:
    email: pavlnowak@gmail.com
    privateKeySecretRef:
      name: letsencrypt-dns01-account-key
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - dns01:
        cloudflare:
          apiTokenSecretRef:
            key: api-token
            name: letsencrypt-cloudflare-api-token-secret
      selector:
        dnsZones:
        - internal.visoft.solutions
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-ingress
  namespace: docker-registry-internal
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: registry.internal.visoft.solutions
    http:
      paths:
      - backend:
          service:
            name: registry-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - registry.internal.visoft.solutions
    secretName: registry-tls
